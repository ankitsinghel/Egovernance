// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/(main)/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(main)/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/login">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/admins/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/sa-dash/admins">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/admins/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/sa-dash/dashboard">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/departments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/sa-dash/departments">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/departments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/sa-dash/settings">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/states/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/sa-dash/states">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/states/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/signup">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/states/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/super-admin/states">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/states/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/dashboard/complaints/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard/complaints">> = Specific
  const handler = {} as typeof import("../../app/admin/dashboard/complaints/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/signup">> = Specific
  const handler = {} as typeof import("../../app/admin/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/report/[trackId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/report/[trackId]">> = Specific
  const handler = {} as typeof import("../../app/report/[trackId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/report/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/report">> = Specific
  const handler = {} as typeof import("../../app/report/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/track/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/track">> = Specific
  const handler = {} as typeof import("../../app/track/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/action/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/action">> = Specific
  const handler = {} as typeof import("../../app/api/admin/action/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/create">> = Specific
  const handler = {} as typeof import("../../app/api/admin/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/exists/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/exists">> = Specific
  const handler = {} as typeof import("../../app/api/admin/exists/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/login">> = Specific
  const handler = {} as typeof import("../../app/api/admin/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/reports/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/reports">> = Specific
  const handler = {} as typeof import("../../app/api/admin/reports/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admins/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admins/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/admins/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admins/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admins">> = Specific
  const handler = {} as typeof import("../../app/api/admins/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/debug/cookies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/debug/cookies">> = Specific
  const handler = {} as typeof import("../../app/api/debug/cookies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/departments/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/departments/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/departments/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/departments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/departments">> = Specific
  const handler = {} as typeof import("../../app/api/departments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/logout">> = Specific
  const handler = {} as typeof import("../../app/api/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/me">> = Specific
  const handler = {} as typeof import("../../app/api/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/otp/request/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/otp/request">> = Specific
  const handler = {} as typeof import("../../app/api/otp/request/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/otp/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/otp/verify">> = Specific
  const handler = {} as typeof import("../../app/api/otp/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/report/[trackingId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/report/[trackingId]">> = Specific
  const handler = {} as typeof import("../../app/api/report/[trackingId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/report/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/report">> = Specific
  const handler = {} as typeof import("../../app/api/report/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/states/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/states/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/states/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/states/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/states">> = Specific
  const handler = {} as typeof import("../../app/api/states/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/super-admin/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/super-admin/login">> = Specific
  const handler = {} as typeof import("../../app/api/super-admin/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/super-admin/signup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/super-admin/signup">> = Specific
  const handler = {} as typeof import("../../app/api/super-admin/signup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/super-admin/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/super-admin/verify">> = Specific
  const handler = {} as typeof import("../../app/api/super-admin/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/(main)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(main)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/super-admin">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(super-admin)/super-admin/sa-dash/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/super-admin/sa-dash">> = Specific
  const handler = {} as typeof import("../../app/(super-admin)/super-admin/sa-dash/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../app/admin/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/report/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/report">> = Specific
  const handler = {} as typeof import("../../app/report/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/track/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/track">> = Specific
  const handler = {} as typeof import("../../app/track/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
